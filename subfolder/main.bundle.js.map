{"version":3,"sources":["E:/Projects/angular-test/src async","E:/Projects/angular-test/src/app/app.component.html","E:/Projects/angular-test/src/app/app.component.ts","E:/Projects/angular-test/src/app/app.module.ts","E:/Projects/angular-test/src/app/app.service.ts","E:/Projects/angular-test/src/app/email.service.ts","E:/Projects/angular-test/src/app/objects.ts","E:/Projects/angular-test/src/environments/environment.ts","E:/Projects/angular-test/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Projects/angular-test/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<button (click)=\\\"send()\\\">Send Email</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Projects/angular-test/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import {Component, OnDestroy} from '@angular/core';\nimport {AppService} from \"./app.service\";\nimport {Email} from \"./objects\";\nimport {Subscription} from \"rxjs/Subscription\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnDestroy {\n  private emailSubscription:Subscription;\n\n  constructor(public appService:AppService) {\n    this.emailSubscription = this.appService.testEmail.subscribe(\n      success => {\n        console.log(success);\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.emailSubscription.unsubscribe();\n  }\n\n  send() {\n    let email:Email = new Email(\"Christian\", \"christian.jonathan.coan@gmail.com\", \"blah@blah.org\", \"Hello\", \"Hello\");\n    this.appService.sendEmail(email);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {HttpModule} from \"@angular/http\";\nimport {AppService} from \"./app.service\";\nimport {EmailService} from \"./email.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule\n  ],\n  providers: [AppService, EmailService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Email} from \"./objects\";\nimport {EmailService} from \"./email.service\";\n\n@Injectable()\nexport class AppService {\n  private testEmailSource = new Subject();\n  testEmail = this.testEmailSource.asObservable();\n\n  constructor(public emailService:EmailService) { }\n\n  sendEmail(email:Email) {\n    this.emailService.sendEmail(email).subscribe(\n      success => {\n        this.testEmailSource.next(success);\n      },\n      error => console.log(error)\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/app/app.service.ts","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs/Observable\";\nimport {Http, RequestOptions, Response, Headers} from '@angular/http';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {Email} from \"./objects\";\n\n@Injectable()\nexport class EmailService {\n  private emailUrl: string = \"https://bitsandbobs.azurewebsites.net/api/email\";\n\n  constructor(private http: Http) {  }\n\n  sendEmail(email: Email) {\n    let body: string = JSON.stringify(email);\n    let headers = new Headers({'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n    return this.http.post(this.emailUrl, body, options)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    let body = res.json();\n    return body.data || {};\n  }\n\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/app/email.service.ts","export class Email {\r\n  name:string;\r\n  emailTo:string;\r\n  emailFrom:string;\r\n  subject:string;\r\n  message:string;\r\n\r\n  constructor(name:string, emailTo:string, emailFrom:string, subject:string, message:string) {\r\n    this.name = name;\r\n    this.emailTo = emailTo;\r\n    this.emailFrom = emailFrom;\r\n    this.subject = subject;\r\n    this.message = message;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/app/objects.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// E:/Projects/angular-test/src/main.ts"],"sourceRoot":"webpack:///"}